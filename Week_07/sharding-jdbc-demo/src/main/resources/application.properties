server.port=9900
spring.application.name=shard-jdbc-starter
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
mybatis.type-aliases-package=com.sun.shard.bean

# 定义数据源

# 定义数据源
sharding.jdbc.datasource.names=m1 

sharding.jdbc.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.m1.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.m1.url=jdbc:mysql://localhost:3306/order_db?useUnicode=true
sharding.jdbc.datasource.m1.username=root
sharding.jdbc.datasource.m1.password=root

# 指定t_order表的数据分布情况，配置数据节点
sharding.jdbc.config.sharding.tables.t_order.actual-data-nodes=m1.t_order_$->{1..2}

# 指定t_order表的主键生成策略为SNOWFLAKE
sharding.jdbc.config.sharding.tables.t_order.key-generator-column-name=order_id

# 分库策略，以user_id为分片键，分片策略为user_id % 2 + 1，user_id为偶数操作d1数据源，否则操作d2
sharding.jdbc.config.sharding.tables.t_order.database-strategy.inline.sharding-column=order_id
sharding.jdbc.config.sharding.tables.t_order.database-strategy.inline.algorithm-expression=m$->{order_id % 2 + 1}

#展示sql
sharding.jdbc.config.sharding.props.sql.show=true